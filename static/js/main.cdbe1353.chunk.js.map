{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Clipborad","App","className","onClick","window","location","href","id","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEA,IAAIA,IAAU,aAwCCC,MAtCf,WAKE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,OAAhB,8BAGJ,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAaC,QAAS,WAZ3CC,OAAOC,SAASC,KAAO,4BAYjB,wDAGA,qBACEC,GAAG,WACH,sBAAoB,oBACpBJ,QAAS,kBAAMK,MAAM,oEAHvB,kJAOA,qBACEN,UAAU,gBACVC,QAAS,kBACNC,OAAOC,SAASC,KAAO,iCAH5B,sGChBKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cdbe1353.chunk.js","sourcesContent":["import './App.css';\nimport Clipborad from 'clipboard';\nnew Clipborad('#ipButton');\n\nfunction App() {\n  const redirect = () => {\n    window.location.href = 'http://shop.mcsicraft.ru';\n  };\n\n  return (\n    <div className='App'>\n      <div className='container'>\n        <div className='serverName'>\n          <span className='name'>SilenceCraft</span>\n        </div>\n      </div>\n      <div className='navigationContainer'>\n        <div className='navigation'>\n          <div className='shopButton' onClick={() => redirect()}>\n            Магазин\n          </div>\n          <div\n            id='ipButton'\n            data-clipboard-text='join.mcsicraft.ru'\n            onClick={() => alert('IP скопирован')}\n          >\n            Нажми, чтобы скопировать IP\n          </div>\n          <div\n            className='discordButton'\n            onClick={() =>\n              (window.location.href = 'https://discord.gg/Z7CKJ9kZ7G')\n            }\n          >\n            Дискорд сервер\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n{\n  /* <button onClick=\"javascript:window.location.href='http://example.com';\"></button> */\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}